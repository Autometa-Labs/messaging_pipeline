zookeeper:
  replicaCount: 1
  image:
    repository: confluentinc/cp-zookeeper
    tag: latest
    pullPolicy: IfNotPresent
  env:
    port: 2181
    tickTime: 2000
  service:
    port: 2181
    name: zookeeper-service

kibana:
  replicaCount: 1
  image:
    repository: docker.elastic.co/kibana/kibana
    tag: 7.4.0
    pullPolicy: IfNotPresent
  env:
    port: 5601
    esHost: http://elasticsearch:9200
  service:
    name: kibana-service
    port: 80
    targetPort: 5601

elasticsearch:
  replicaCount: 1
  image:
    repository: docker.elastic.co/elasticsearch/elasticsearch
    tag: 7.4.0
    pullPolicy: IfNotPresent
  env:
    expackSecurityEnabled: "false"
    discoveryType: "single-node"
  resources:
    limits:
      cpu: 1000m
    requests:
      cpu: 100m
  service:
    name: elasticsearch-service
    port: 9200
  ports:
    - 9200
    - 9300

cassandra:
  replicaCount: 1
  image:
    repository: cassandra
    tag: latest
    pullPolicy: IfNotPresent
  ports:
    - 7000
    - 7001
    - 7199
    - 9042
  service:
    name: cassandra
    port: 7000

kafka:
  replicaCount: 1
  image:
    repository: confluentinc/cp-kafka
    tag: latest
    pullPolicy: IfNotPresent
  service:
    name: kafka
    port: 9092
  env:
    kafka_broker_id:
      name: KAFKA_BROKER_ID
      value: 1
    kafka_offset:
      name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
      value: 1
    kafka_group:
      name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
      value: 0
    kafka_adv_listeners:
      name: KAFKA_ADVERTISED_LISTENERS
      value: "PLAINTEXT://kafka:9092"
    kafka_listener:
      name: KAFKA_LISTENERS
      value: "PLAINTEXT://:9092"
    kafka_create_topics:
      name: KAFKA_CREATE_TOPICS
      value: "our_kafka_topic:2:1"
    topic_name:
      name: TOPIC_NAME
      value: "our_kafka_topic"
    zookeeper_connect:
      name: KAFKA_ZOOKEEPER_CONNECT

consumer:
  replicaCount: 1
  image:
    repository: kafka-consumer
    pullPolicy: Never
  env:
    offset_reset:
      name: auto_offset_reset
      value: "latest"
    group_id:
      name: group_id
      value: "consumer-group"
    topic:
      name: topic_name
      value: "our_kafka_topic"
    bootstrap_servers:
      name: bootstrap_servers
    es_url:
      name: elasticsearch_url

producer:
  replicaCount: 1
  image:
    repository: kafka-producer
    pullPolicy: Never
  env:
    bootstrap_servers:
      name: bootstrap_servers
    directory:
      name: files_dir
      value: "/src/main/resources/twitter"
    first_name:
      name: fname_file
      value: "firstname.txt"
    last_name:
      name: lname_file
      value: "surname.txt"
    words:
      name: words_file
      value: "words.txt"
